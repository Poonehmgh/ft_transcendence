generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DB_URL")
}

model User {
    createdAt     DateTime    @default(now())
    updatedAt     DateTime    @updatedAt
    // registration
    id            Int         @id @unique // this is the intraID
    socketId      String      @default("")
    name          String      @unique
    email         String      @unique
    twoFa         Boolean     @default(false)
    twoFaSecret   String?
    // scorecard
    mmr           Int         @default(1000)
    rank          String      @default("noob")
    matches       Int[]
    winrate       Float?
    // chat
    online        Boolean     @default(false)
    friends       Int[]
    friendReq_out Int[]
    friendReq_in  Int[]
    blocked       Int[]
    userChats     Chat_User[]
    refreshToken String?
}

model Match {
    // match
    createdAt   DateTime  @default(now())
    updatedAt   DateTime  @updatedAt
    id          Int       @id @unique @default(autoincrement())
    begin       DateTime?
    end         DateTime?
    length_sec  Int?
    // players
    player1     Int
    player2     Int
    // outcome
    score_p1    Int       @default(0)
    score_p2    Int       @default(0)
    winner_id   Int?
    winner_name String?
}

model Message {
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    id        Int      @id @unique @default(autoincrement())
    content   String
    author    Int
    chat      Chat     @relation(fields: [chatId], references: [id])
    chatId    Int
}

model Chat {
    createdAt    DateTime    @default(now())
    updatedAt    DateTime    @updatedAt
    id           Int         @id @unique @default(autoincrement())
    name         String
    dm           Boolean     @default(false)
    isPrivate    Boolean     @default(false)
    passwordHash String?
    messages     Message[]
    chatUsers    Chat_User[]
}

// junction tables

model Chat_User {
    createdAt   DateTime @default(now())
    updatedAt   DateTime @updatedAt
    id          Int      @id @unique @default(autoincrement())
    user        User     @relation(fields: [userId], references: [id])
    userId      Int
    chat        Chat     @relation(fields: [chatId], references: [id])
    chatId      Int
    owner       Boolean  @default(false)
    admin       Boolean  @default(false)
    muted       Boolean  @default(false)
    muted_until DateTime @default(now())
    banned      Boolean  @default(false)

    @@index([userId, chatId])
}
