generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DB_URL")
}

model User {

  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  id            Int          @id @unique // this is the intraID
  name          String       @unique
  email         String       @unique
  passHash      String
  avatarURL     String       @default("defaultPath")
  badgeName     String       @default("noob")
  wins          Int          @default(0)
  goals         Int          @default(0)
  mmr           Int          @default(1000)
  online        Boolean      @default(false)
  friends       Int[]
  friendReq_out Int[]
  friendReq_in  Int[]
  blocked       Int[]
  chatUsers     Chat_User[]  @relation
  matchUsers    Match_User[] @relation
  matches       Int[]
}

model Match {
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  id         Int          @id @unique @default(autoincrement())
  begin      DateTime?
  end        DateTime?
  length_sec Int?
  player_one Int
  player_two Int
  score_one  Int          @default(0)
  score_two  Int          @default(0)
  winner     Int?
  loser      Int?
  draw       Boolean      @default(false)
  Match_User Match_User[]
}

model Message {
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  id        Int      @id @unique @default(autoincrement())
  author    Int
  chat      Chat     @relation(fields: [chatId], references: [id])
  content   String
  chatId    Int
}

model Chat {
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  id           Int         @id @unique @default(autoincrement())
  name         String      @default("Unnamed Chat")
  hidden       Boolean     @default(false)
  pw_protected Boolean     @default(false)
  password     String? // hash this?
  messages     Message[]
  users        Chat_User[]
}

// junction tables
// @@index directive: enforce uniqueness for the combination of the two values.
// e.g. user can't be in the same match more than once
model Match_User {
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  id        Int      @id @unique
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  match     Match    @relation(fields: [matchId], references: [id])
  matchId   Int

  @@index([userId, matchId])
}

model Chat_User {
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  id        Int      @id @unique @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  chat      Chat     @relation(fields: [chatId], references: [id])
  chatId    Int
  owner     Boolean  @default(false)
  admin     Boolean  @default(false)
  blocked   Boolean  @default(false)
  muted     Boolean  @default(false)

  @@index([userId, chatId])
}
